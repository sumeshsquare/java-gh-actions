name: Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Do you want to release in Prod? (yes/no)'
        required: true
        default: 'no'

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Verify with Maven
      run: mvn clean verify

    - name: "Configure AWS Credentials"
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: AWS CodeArtifact Auth
      uses: advancedcsg-open/actions-aws-codeartifact-auth@v1.0.0
      with:
        region: ${{ secrets.AWS_REGION }}
        domain: poc
        domain-owner: ${{ secrets.AWS_ACCOUNT_ID }}
        duration: 900

    - name: Build & Upload to CodeArtifact with Maven
      run: |
             mvn -s settings.xml clean package deploy

    - name: SSH to EC2 - DEV
      uses: tarunjangra/ssh-remote-cmd@v1
      with:
        command: |
                cd /home/ec2-user/
                Package_Name=`aws codeartifact list-package-version-assets  --domain poc --repo poc --format maven  --package spring-boot-complete  --package-version 0.0.1-SNAPSHOT --namespace com.example --output text --query 'assets[*].[name]' | grep jar`
                aws codeartifact get-package-version-asset --domain poc --domain-owner 629326733698 --repository poc  --format maven --namespace com.example --package spring-boot-complete --package-version 0.0.1-SNAPSHOT --asset $Package_Name 0.0.1-SNAPSHOT.jar
                PID=`ps -Aef|grep SNAPSHOT | grep java | awk -F ' ' '{print $2}'`
                kill -9 $PID
                nohup java -jar 0.0.1-SNAPSHOT.jar >/dev/null &
        host: ${{ secrets.AWS_EC2_HOST }}
        user: ec2-user
        key: ${{ secrets.AWS_EC2_PEM_KEY }}
  
#   deploy-qa:
#     if: github.event.inputs.releaseType == 'prod'
#     runs-on: ubuntu-latest
#     needs: deploy-dev
#     steps:
#     - uses: actions/checkout@v3
    
#     - name: SSH to EC2 - QA
#       uses: tarunjangra/ssh-remote-cmd@v1
#       with:
#         command: |
#                 cd /home/ec2-user/
#                 Package_Name=`aws codeartifact list-package-version-assets  --domain poc --repo poc --format maven  --package spring-boot-hello-world-example  --package-version 0.0.1-SNAPSHOT --namespace com.javatpoint --output text --query 'assets[*].[name]' | grep jar`
#                 aws codeartifact get-package-version-asset --domain poc --domain-owner 629326733698 --repository poc  --format maven --namespace com.javatpoint --package spring-boot-hello-world-example --package-version 0.0.1-SNAPSHOT --asset $Package_Name 0.0.1-SNAPSHOT.jar
#                 PID=`ps -Aef|grep SNAPSHOT | grep java | awk -F ' ' '{print $2}'`
#                 kill -9 $PID
#                 #nohup java -jar 0.0.1-SNAPSHOT.jar &
#                 nohup java -jar 0.0.1-SNAPSHOT.jar >/dev/null &
#         host: ${{ secrets.AWS_EC2_HOST }}
#         user: ec2-user
#         key: ${{ secrets.AWS_EC2_PEM_KEY }}
  
#   deploy-prod:
#     if: github.event.inputs.releaseType == 'prod'
#     runs-on: ubuntu-latest
#     needs: deploy-qa
#     steps:
#     - uses: actions/checkout@v3
    
#     - name: SSH to EC2 - QA
#       uses: tarunjangra/ssh-remote-cmd@v1
#       with:
#         command: |
#                 cd /home/ec2-user/
#                 Package_Name=`aws codeartifact list-package-version-assets  --domain poc --repo poc --format maven  --package spring-boot-hello-world-example  --package-version 0.0.1-SNAPSHOT --namespace com.javatpoint --output text --query 'assets[*].[name]' | grep jar`
#                 aws codeartifact get-package-version-asset --domain poc --domain-owner 629326733698 --repository poc  --format maven --namespace com.javatpoint --package spring-boot-hello-world-example --package-version 0.0.1-SNAPSHOT --asset $Package_Name 0.0.1-SNAPSHOT.jar
#                 PID=`ps -Aef|grep SNAPSHOT | grep java | awk -F ' ' '{print $2}'`
#                 kill -9 $PID
#                 #nohup java -jar 0.0.1-SNAPSHOT.jar &
#                 nohup java -jar 0.0.1-SNAPSHOT.jar >/dev/null &
#         host: ${{ secrets.AWS_EC2_HOST }}
#         user: ec2-user
#         key: ${{ secrets.AWS_EC2_PEM_KEY }}
